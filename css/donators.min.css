@font-face {
  font-family: "Regular";
  src: url("../fonts/Raleway.ttf");
}
html {
  box-sizing: border-box;
}

*,
*::after,
*::before {
  box-sizing: inherit;
  outline: transparent;
}

ul,
ol {
  padding: 0;
}

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}

input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

input[type=number],
input[type=number]:hover,
input[type=number]:focus {
  -webkit-appearance: none;
          appearance: none;
  -moz-appearance: textfield;
}

body {
  min-height: 100vh;
}

a {
  text-decoration: none;
  color: inherit;
}

button {
  background-color: transparent;
  border: none;
  padding: 0;
  cursor: pointer;
}

body {
  display: flex;
  flex-direction: column;
  height: 100%;
  font-family: "Raleway", sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.25;
  color: #323232;
  background-color: #ffffff;
}

.section {
  flex: 1 1 auto;
  min-height: 100%;
}

.container {
  max-width: 1400px;
  width: 100%;
  height: 100%;
  margin: 0 auto;
}

.tittle::first-letter {
  text-transform: uppercase;
}

.header {
  box-shadow: 0 0 10px rgba(50, 50, 50, 0.6);
}

.header__wrapper {
  padding: 26px 0;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

.header__inner {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  gap: 50px;
  flex-grow: 1;
  margin-right: 31px;
}

.menu {
  flex-grow: 1;
}
.menu__list {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  gap: 24px;
}
.menu__item {
  position: relative;
}
.menu__item::first-letter {
  text-transform: uppercase;
}
.menu__item:last-child {
  color: #fdac44;
}
.menu__item::before, .menu__item::after {
  content: "";
  position: absolute;
  height: 2px;
  background: #323232;
  top: auto;
  bottom: 0;
  left: 50%;
  right: 50%;
  transition: 0.2s ease-in;
}
.menu__item:hover::before {
  left: 0;
}
.menu__item:hover::after {
  right: 0;
}

.authorization {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 18px;
}
.authorization__user {
  display: flex;
  align-items: center;
  gap: 18px;
}
.authorization__user-data__user-name {
  color: #fdac44;
}
.authorization__user p::first-letter {
  text-transform: capitalize;
}

.main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 35px;
  margin: auto 150px;
  max-width: 480px;
  height: 100%;
}
.main__title {
  font-size: 60px;
  line-height: 1.3;
  font-weight: bold;
}
.main__title span {
  color: #A92A1D;
}

.footer {
  background: #323232;
  color: #ffffff;
  padding: 24px 0;
}
.footer__wrapper {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}
.footer .menu .menu__list {
  justify-content: center;
}
.footer .menu__item::before, .footer .menu__item::after {
  background: #ffffff;
}
.footer__copyright {
  text-align: center;
  font-size: 16px;
  color: #ffffff;
  margin-top: 30px;
  filter: contrast(0.3);
}
.footer__copyright::first-letter {
  text-transform: uppercase;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
